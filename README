
$Id: README,v 1.6 2005/04/11 18:38:20 jimg Exp $

For information about building the DODS netCDF 3 source code, see the INSTALL
file.

This file provides basic information about the DODS netCDF server and its
configuration. For more detailed information, see the Server Installation
Guide at http://www.unidata.ucar.edu/packages/dods/user/install-html/.

The information that follows is mostly up to date, but the Server Install
Guide is probably a better source of information for most users.

----------------------------------------------------------------------------

This file contains information about the DODS-netCDF software. For information
about building and using the software, see the files INSTALL and USING. For
information about secure servers (that limit access to domains or individual
people) see the file SECURITY.

The Distributed Oceanographic Data System (DODS) allows you to access local
and/or remote data sets without the need for format conversion or changes
to the original software. Instead, existing software can be rebuilt using 
the DODS replacements for certain standard components. This rebuilt would make
the software into a DODS client which can now communicate with DODS servers.

DODS also makes it simple to provide others with direct, over-the-network,
access to your data. There is no need to reformat your data so that a new
system can read it. Instead DODS uses the http server along with a dispatch 
script and a set of three server programs (Data Attribute Server, Data 
Structure Server, and Data Server) to make your existing data files available
to anyone who has access to a program rebuilt with DODS components.

For more information about OPeNDAP and DODS, see the URL

    http://www.opendap.org/

nc-dods is a client-server implementation of the Unidata netCDF API, based on
the Distributed Oceanographic Data System. nc-dods contains a new
implementation of the netCDF library which can be linked with programs which
currently are built with the standard implementation of the API. In addition,
the software also contains a matching data server which can be used along
with the client library.

The replacement library included in the nc-dods distribution mirrors the
standard implementation of the netCDF API very closely. A variety of software
packages have been developed for netCDF data display and analysis; rebuilding
these packages with nc-dods library instead of the original netCDF library
makes them capable of accessing data over the network through the provided
server software. The user can refer to the entire remote dataset using a URL
instead of the local file name. Furthermore, if the user wants to work only
with a small part of the data set, a constraint expression can be supplied
along with the URL to save on network data transmition time.

The current nc-dods client software supports the C programming interface 
and the Fortran Jacket of the netCDF for UNIX platform.

You can obtain a copy of the latest version of nc3-dods software from
http://unidata.ucar.edu/packages/dods/.

Included in this distribution are: 

 - The netCDF surrogate client library,
 - The Fortran jacket for the netCDF surrogate library,
 - server programs and their dispatch script (nc-dods, nc-das, nc-dds, nc),
 - ncdump and ncview programs rebuilt with nc-dods client library, 
 - test programs, and documentation.

RELINKING USER SOFTWARE

To re-link an existing program with the DODS implementation of netCDF, you do
just that. Find the directory that contains the source code and modify the
Makefile for the program so that in place of the netCDF library the DODS
library is used. Because DODS is implemented as a core set of classes
that are then specialized for each re-implemented API, the re-linking
of a program involves several libraries.  These libraries are:

	libdap++.a:	 The core software
	libnc-dods.a:	 The software special to the netCDF implementation

Once built and installed, these libraries will be in the lib/
directory.  The required header files should be in include/.  There
are quite a few header files that come with the libdap++.a library.
Only netcdf.h comes with the libnc-dods.a, it is the standard netCDF
header file (you should not need to change your netCDF application).

Also used by DODS are the World Wide Web library from the Web Consortium, Tcl
from Sun Labs and Expect from NIST. These libraries are all freely available
(you can get either source of binary versions from our ftp site or the
`official' site - see http://www.unidata.ucar.edu/packages/dods/home/sw.html).
The World Wide Web library is required by DODS while the Tcl and Expect
libraries are not.

Look in the Makefile in this directory to see how we re-linked the netCDF
programs `ncdump' and `ncview'. When using g++ a program can be re-linked
without explicitly including libg++.a on the command line:

	-lnc-dods -ldap++ -lcurl -lrx -lz

Once re-linked, the program will work exactly as before when run using local
files. However, users can also give URLs to specify data files. In this case
the machine name part of the URL must reference a machine which has data
accessible via a DODS data server (see SETTING UP A DATA SERVER). Suppose
that a friend has told you about a data file named `buoys.nc' in a directory
called `exp1' on a machine named oceans.univ.edu. To look at this data invoke
ncdump using the URL for this data in place of a simple filename. E.G.:

       ncdump http://dods.gso.uri.edu/cgi-bin/nph-nc/data/fnoc3.nc

       ^^^^^^        ^^^^^^^^^^^^^^^^ ^^^^^^^^^^^^^^ ^^^^ ^^^^^^^^ 
       Program	     Machine name     Server         Dir  File     
	      
And to look at the first 10 elements of an array vairable named `u' in this
data file, you can use a constraint as a URL parameter. E.G.:

       ncdump http://dods.gso.uri.edu/cgi-bin/nph-nc/data/fnoc3.nc?u[0:9]

       ^^^^^^        ^^^^^^^^^^^^^^^^ ^^^^^^^^^^^^^^ ^^^^ ^^^^^^^^ ^^^^^^
       Program	     Machine name     Server         Dir  File     Constraint
	      
Note that the URL to data/fnoc3.nc is accessed via the data server which is
an http CGI module. You need to tell the http daemon to run the DODS data
server and read from the named file (in this case data/fnoc3.nc). That is why
the `cgi-bin/nph-nc' part is in the URL.

SETTING UP A DATA SERVER

Note: this discussion assumes that the NCSA World Wide Web server (httpd) is
installed on the workstation which is to be used to serve data. You do not
need to use this particular web server, any server that supports CGI 1.1
(Netscape, Apache, CERN, ...) will work. If you not have a web server
installed, first install one and then continue installing the DODS server.
For information on various servers, see: 

NCSA		http://hoohoo.ncsa.uiuc.edu/
Apache		http://www.apache.org/
CERN/W3C	http://www.w3c.org/

To set up a DODS data server using the netCDF server implementation, first
follow the instructions in the INSTALL document. Four programs comprise the
data server: a CGI (nph-nc) which is used to dispatch each data request to the
correct filter program and three filter programs (nc_das, nc_dds,
nc_dods). Make sure that the CGI module `nph-nc' is somewhere where the http
server can run CGI modules. 

Data that are to be served by the DODS server must either be within the http
server's document root directory or they must be in files/directories that
are linked to files/directories within the document root directory. To find
out which directory is the http server's document root, look in the httpd
configuration file srm.conf.

For example, to make the file test.nc available to users it must be either
placed or linked within the document root directory. On my workstation
the document root directory is /usr/local/spool/http so the file must be
moved or copied to that directory or one of its subdirectories or I must
create a symbolic link in that directory or one of its subdirectories to the
file. I have created a directory `data' in the http server's document root
directory and copied the file test.nc there. The URL to that data file is:

	  http://dods.gso.uri.edu/cgi-bin/nph-nc/data/test.nc

Note that after the machine name (dods.gso.uri.edu) the URL contains the path
to the DODS data server CGI and that the path to the data (relative to the
document root directory) *follows* the CGI name.

Also note that to limit access to the server to a specific set of machines,
place the CGI within the document root directory (this works for NCSA version
1.5 and later and also for Apache 1.1.1 and later). See the file SECURITY for
a detailed description of the types of security DODS provides for data and
how to install servers to take advantage of those features.

Good Luck :-)
Reza Nekovei, URI

NETCDF CLIENT-LIBRARY DESIGN INFORMATION

Compile time constants

URL parameters; pointer to wiki desing page.

Files and their function

Narrative

